<?php	/*+-----------------------------------------------------------------------------------------+	  | 用户模型	  +-----------------------------------------------------------------------------------------+	  | 版权所有 lamp兄弟连源代码小组							  +-----------------------------------------------------------------------------------------+	  | 作者: 范培 (52web@sina.cn)								  | 最后修改时间: 2012-01-14 18:46   											  +-----------------------------------------------------------------------------------------+	*/		class User{		/*			用户加分,如果升级了,自动发短信给指定用户.自动刷新session里面的积分与等级(本人操作)			@param1 int 用户id			@param2 int 积分			@return boolean		*/		public function add_grade($uid,$num){			//如果传进来的uid等于session里的.说明是本人操作(发帖,回帖等),否则是别人操作(如版主给此用户的某个主题置顶,加精,推荐等)			if($_SESSION['user_info']['id']==$uid){				$this->where(array('id'=>$uid))->update("grade_num=grade_num+$num");//加分				$new_level=$this->get_level($uid);//得到加分后的等级				$_SESSION['user_info']['grade_num']+=$num;//刷新session里的积分				//如果获取的等级不等于session里等级,说明升级了,那么就发个短信对用户通知				if($new_level!=$_SESSION['user_info']['level']){					D('sms')->send_sms('0',$uid,'del','save','4',"恭喜升至 <b style='color:red'>{$new_level}</b>");				}				$_SESSION['user_info']['level']=$new_level;//刷新session的等级			}else{				$old_level=$this->get_level($uid);//得到用户等级				$this->where(array('id'=>$uid))->update("grade_num=grade_num+$num");//加分				$new_level=$this->get_level($uid);//再次得到用户的等级				//如果原来的等级不等于第二次获取的等级,说明升级了,那么就就发短信对用户通知				if($old_level!=$new_level){					D('sms')->send_sms('0',$uid,'del','save','4',"恭喜升至 <b style='color:red'>{$new_level}</b>");				}			}			return true;		}				/*			得到用户的等级			@param1 int 用户id			@return string 用户的等级		*/		public function get_level($uid){			$userinfo=$this->field('stand,grade_num')->where(array('id'=>$uid))->find();			//如果是管理员,就直接返回管理员,如果是版主,就直接返回版主,如果是普通用户,则根据积分到等级表进行查询			if($userinfo['stand']==1){				return '管理员';			}elseif($userinfo['stand']==2){				return '版主';			}elseif($userinfo['stand']==3){				$level_name=D('level')->field('name')									  ->where(array('mini <='=>$userinfo['grade_num'],'maxi >='=>$userinfo['grade_num']))									  ->find();				return $level_name['name'];			}		}				/*			得到用户签名			@param1 int 用户id			@return string 签名		*/		public function get_sign($uid){			$sign=$this->field('sign')->where(array('id'=>$uid))->find();			return $sign['sign'];		}						/*			得到一共有多少会员			@return int		*/		public function get_user_total_num(){			$num=$this->total();			return $num;		}				/*			得到今日新加入会员数量			@return int		*/		public function get_user_today_num(){			$num=$this->field('count(id) as num')						  ->where(array("reg_time >="=>mktime(0,0,0,date('m'),date('d'),date('Y'))))						  ->total();			return $num;		}				/*			得到今日新加入会员名及id号			@return array(一维数组)		*/		public function get_new_user(){			$new_user=$this->field('id,name')->order("reg_time desc")->find();			return $new_user;		}						/*			得到用户名			@param1 int 用户的id号		*/		public function user_name($uid){			$user_name=$this->field('name')->find($uid);			return $user_name['name'];		}				/*			得到用户好友数量			@param1 int 用户的id号			@return int		*/				public function friend_num($uid){			return D('friend')->where(array('uid'=>$uid,'status'=>"1"))->total();		}				/*			得到用户主题数量			@param1 int 用户的id号			@return int				*/		public function subj_num($uid){			return D('subject')->where(array('uid'=>$uid))->total();		}			/*			得到用户评论数量			@param1 int 用户的id号			@return int				*/		public function comm_num($uid){			return D('comment')->where(array('uid'=>$uid))->total();		}			/*			得到用户日志数量			@param1 int 用户的id号			@return int				*/				public function log_num($uid){			return D('log')->where(array('uid'=>$uid))->total();		}		/*			得到用户的头像			@param1 int 用户id			@return string 头像名称		*/		public function user_face($uid){			$face=$this->field('face_path')->where(array('id'=>$uid))->find();			return $face['face_path'];		}				/*			得到用户相册数量			@param1 int 用户的id号			@return int				*/					public function album_num($uid){			return D('album')->where(array('uid'=>$uid))->total();		}				/*			得到访客数量			@param1 int 用户的id号			@return int				*/					public function guest_num($uid){			return D('guest')->where(array('uid'=>$uid))->total();		}				/*			得到用户的居住地或者出生地			@param1 array(province=省id city=市id)			@return array(province=省名 city=市名)		*/		public function get_address($str){			$address=explode(',',$str);			list($province_id,$city_id)=$address;			$true_address=array();			$province=D('province')->field('name')->where(array('id'=>$province_id))->find();			$city=D('city')->field('name')->where(array('id'=>$city_id))->find();			$true_address['province']=$province['name'];//省			$true_address['city']=$city['name'];//市			return $true_address;		}				/*			随时获取用户最新的短信数量			@return int		*/		public function sms_num(){			if($_SESSION['home_login']){				return D('sms')->where(array('dst_id'=>$_SESSION['user_info']['id'],'is_read'=>'0'))->total();			}		}	}